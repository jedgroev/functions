<Icon><href>files/icon.png</href></Icon></IconStyle></Style>')
parseXMLAndAdd(txtc, parent = h4)
parseXMLAndAdd(style, parent = h4)
XML::saveXML(pnt.kml, '~/Downloads/2_TEMP/kml/pnt.kml')
pnt.kml
fCO2
fCO2$rownumber <- 1:nrow(fCO2)
library("XML")
pnt.kml <- newXMLNode("kml")
h2 <- newXMLNode("Document", parent = pnt.kml)
h3 <- newXMLNode("name", "flight", parent= h2)
h4 <- newXMLNode("Folder", parent=pnt.kml[["Document"]])
txtc <- paste0('<Placemark><styleUrl>"', 'pnt',fCO2$rownumber,'"</styleUrl><Point><coordinates>',fCO2$Rlat,',',fCO2$Rlong,',','</coordinates></Point></Placemark>')
style <- paste0('<Style id="', 'pnt',fCO2$rownumber,'"><LabelStyle><scale>',fCO2$vel,'</scale></LabelStyle><IconStyle>
<color>', col2kml(fCO2$Col),'</color>
<scale>',fCO2$vel,'</scale>
<heading>',fCO2$dir,'</heading>
<Icon><href>files/icon.png</href></Icon></IconStyle></Style>')
parseXMLAndAdd(txtc, parent = h4)
parseXMLAndAdd(style, parent = h4)
XML::saveXML(pnt.kml, '~/Downloads/2_TEMP/kml/pnt.kml')
kml2 <- function(obj,altitude,colour,heading,size,size_scale=c(0.5,2),shape,filename='text.kml'){
# obj = spatialpointsdataframe
# altitude = column name with altitude info
# ...
# shape = icon weblink
obj$rownumber <- 1:nrow(obj)
require("XML")
pnt.kml <- newXMLNode('kml')
h2 <- newXMLNode("Document", parent = pnt.kml)
h3 <- newXMLNode("name", "flight", parent= h2)
h4 <- newXMLNode("Folder", parent=pnt.kml[["Document"]])
txtc <- paste0('<Placemark><name/><styleUrl>#pnt',obj$rownumber,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[,1],',',coordinates(obj)[,2],',',round(obj@data[,altitude]),'</coordinates></Point></Placemark>')
style <- paste0('<Style id="', 'pnt',obj$rownumber,'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[,colour]),'</color><heading>',obj@data[,heading]-180,'</heading>
<scale>',rescale(obj@data[,size],size_scale),'</scale>
<Icon><href>',shape,'</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
parseXMLAndAdd(style, parent = h4)
parseXMLAndAdd(txtc, parent = h4)
XML::saveXML(pnt.kml, filename)
# obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
# coordinates(obj) <- c('longitude','latitude')
# proj4string(obj)<- CRS("+init=epsg:4326")
# kml_func(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/test.kml')
# kml_func(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="icons/fCO2arrow.png",filename='Downloads/test.kml')
}
kml2 <- function(obj,altitude,colour,heading,size,size_scale=c(0.5,2),shape,filename='text.kml'){
# obj = spatialpointsdataframe
# altitude = column name with altitude info
# ...
# shape = icon weblink
obj$rownumber <- 1:nrow(obj)
require("XML")
pnt.kml <- newXMLNode('kml')
h2 <- newXMLNode("Document", parent = pnt.kml)
h3 <- newXMLNode("name", "flight", parent= h2)
h4 <- newXMLNode("Folder", parent=pnt.kml[["Document"]])
txtc <- paste0('<Placemark><name/><styleUrl>#pnt',obj$rownumber,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[,1],',',coordinates(obj)[,2],',',round(obj@data[,altitude]),'</coordinates></Point></Placemark>')
style <- paste0('<Style id="', 'pnt',obj$rownumber,'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[,colour]),'</color><heading>',obj@data[,heading]-180,'</heading>
<scale>',rescale(obj@data[,size],size_scale),'</scale>
<Icon><href>',shape,'</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
parseXMLAndAdd(style, parent = h4)
parseXMLAndAdd(txtc, parent = h4)
XML::saveXML(pnt.kml, filename)
# obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
# coordinates(obj) <- c('longitude','latitude')
# proj4string(obj)<- CRS("+init=epsg:4326")
# kml_func(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/test.kml')
# kml_func(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="icons/fCO2arrow.png",filename='Downloads/test.kml')
}
obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
coordinates(obj) <- c('longitude','latitude')
proj4string(obj)<- CRS("+init=epsg:4326")
require(sp)
coordinates(obj) <- c('longitude','latitude')
proj4string(obj)<- CRS("+init=epsg:4326")
kml_func(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/kmlresulttest.kml')
kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/kmlresulttest.kml')
require(plotKML)
kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/kmlresulttest.kml')
require(scales)
kml2 <- function(obj,altitude,colour,heading,size,size_scale=c(0.5,2),shape,filename='text.kml'){
require(sp)
require(plotKML)
require(scales)
# obj = spatialpointsdataframe
# altitude = column name with altitude info
# ...
# shape = icon weblink
obj$rownumber <- 1:nrow(obj)
require("XML")
pnt.kml <- newXMLNode('kml')
h2 <- newXMLNode("Document", parent = pnt.kml)
h3 <- newXMLNode("name", "flight", parent= h2)
h4 <- newXMLNode("Folder", parent=pnt.kml[["Document"]])
txtc <- paste0('<Placemark><name/><styleUrl>#pnt',obj$rownumber,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[,1],',',coordinates(obj)[,2],',',round(obj@data[,altitude]),'</coordinates></Point></Placemark>')
style <- paste0('<Style id="', 'pnt',obj$rownumber,'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[,colour]),'</color><heading>',obj@data[,heading]-180,'</heading>
<scale>',rescale(obj@data[,size],size_scale),'</scale>
<Icon><href>',shape,'</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
parseXMLAndAdd(style, parent = h4)
parseXMLAndAdd(txtc, parent = h4)
XML::saveXML(pnt.kml, filename)
# obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
# coordinates(obj) <- c('longitude','latitude')
# proj4string(obj)<- CRS("+init=epsg:4326")
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/test.kml')
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="icons/fCO2arrow.png",filename='Downloads/test.kml')
}
kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/kmlresulttest.kml')
col2kml('white')
kml2 <- function(obj,altitude,colour,heading,size,size_scale=c(0.5,2),shape,filename='text.kml'){
require(sp)
require(plotKML)
require(scales)
# obj = spatialpointsdataframe
# altitude = column name with altitude info
# ...
# shape = icon weblink
obj$rownumber <- 1:nrow(obj)
require("XML")
pnt.kml <- newXMLNode('kml')
h2 <- newXMLNode("Document", parent = pnt.kml)
h3 <- newXMLNode("name", "flight", parent= h2)
h4 <- newXMLNode("Folder", parent=pnt.kml[["Document"]])
txtc <- paste0('<Placemark><name/><styleUrl>#pnt',obj$rownumber,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[,1],',',coordinates(obj)[,2],',',round(obj@data[,altitude]),'</coordinates></Point></Placemark>')
style <- paste0('<Style id="', 'pnt',obj$rownumber,'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[,colour]),'</color><heading>',obj@data[,heading]-180,'</heading>
<scale>',rescale(obj@data[,size],size_scale),'</scale>
<Icon><href>',shape,'</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
txtc_start <- paste0('<Placemark><name/><styleUrl>#pnt',1,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[1,1],',',coordinates(obj)[1,2],',',round(obj@data[1,altitude]),'</coordinates></Point></Placemark>')
style_start <- paste0('<Style id="', 'pnt',1,'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml('white'),'</color>
<scale>',rescale(obj@data[1,size],size_scale),'</scale>
<Icon><href>','http://maps.google.com/mapfiles/kml/pal2/icon18.png','</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
parseXMLAndAdd(style_start, parent = h4)
parseXMLAndAdd(txtc_start, parent = h4)
parseXMLAndAdd(style, parent = h4)
parseXMLAndAdd(txtc, parent = h4)
XML::saveXML(pnt.kml, filename)
# obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
# coordinates(obj) <- c('longitude','latitude')
# proj4string(obj)<- CRS("+init=epsg:4326")
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/test.kml')
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="icons/fCO2arrow.png",filename='Downloads/test.kml')
}
obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
coordinates(obj) <- c('longitude','latitude')
proj4string(obj)<- CRS("+init=epsg:4326")
kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/kmlresulttest.kml')
nrow(obj)
kml2 <- function(obj,altitude,colour,heading,size,size_scale=c(0.5,2),shape,filename='text.kml'){
require(sp)
require(plotKML)
require(scales)
# obj = spatialpointsdataframe
# altitude = column name with altitude info
# ...
# shape = icon weblink
obj$rownumber <- 1:nrow(obj)
require("XML")
pnt.kml <- newXMLNode('kml')
h2 <- newXMLNode("Document", parent = pnt.kml)
h3 <- newXMLNode("name", "flight", parent= h2)
h4 <- newXMLNode("Folder", parent=pnt.kml[["Document"]])
txtc <- paste0('<Placemark><name/><styleUrl>#pnt',obj$rownumber,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[2:nrow(obj),1],',',coordinates(obj)[2:nrow(obj),2],',',round(obj@data[2:nrow(obj),altitude]),'</coordinates></Point></Placemark>')
style <- paste0('<Style id="', 'pnt',obj$rownumber[2:nrow(obj)],'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[2:nrow(obj),colour]),'</color><heading>',obj@data[2:nrow(obj),heading]-180,'</heading>
<scale>',rescale(obj@data[2:nrow(obj),size],size_scale),'</scale>
<Icon><href>',shape,'</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
txtc_start <- paste0('<Placemark><name/><styleUrl>#pnt',1,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[1,1],',',coordinates(obj)[1,2],',',round(obj@data[1,altitude]),'</coordinates></Point></Placemark>')
style_start <- paste0('<Style id="', 'pnt',1,'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[1,colour]),'</color>
<scale>',rescale(obj@data[1,size],size_scale),'</scale>
<Icon><href>','http://maps.google.com/mapfiles/kml/pal2/icon18.png','</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
parseXMLAndAdd(style_start, parent = h4)
parseXMLAndAdd(txtc_start, parent = h4)
parseXMLAndAdd(style, parent = h4)
parseXMLAndAdd(txtc, parent = h4)
XML::saveXML(pnt.kml, filename)
# obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
# coordinates(obj) <- c('longitude','latitude')
# proj4string(obj)<- CRS("+init=epsg:4326")
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/test.kml')
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="icons/fCO2arrow.png",filename='Downloads/test.kml')
}
kml_func(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="icons/fCO2arrow.png",filename='Downloads/test.kml')
obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
coordinates(obj) <- c('longitude','latitude')
proj4string(obj)<- CRS("+init=epsg:4326")
kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/kmlresulttest.kml')
obj$rownumber[2:nrow(obj)]
obj
obj$rownumber
obj$rownumber <- 1:nrow(obj)
obj$rownumber
obj$rownumber[2:nrow(obj)]
size_scale
kml2 <- function(obj,altitude,colour,heading,size,size_scale=c(0.5,2),shape,filename='text.kml'){
require(sp)
require(plotKML)
require(scales)
# obj = spatialpointsdataframe
# altitude = column name with altitude info
# ...
# shape = icon weblink
obj$rownumber <- 1:nrow(obj)
require("XML")
pnt.kml <- newXMLNode('kml')
h2 <- newXMLNode("Document", parent = pnt.kml)
h3 <- newXMLNode("name", "flight", parent= h2)
h4 <- newXMLNode("Folder", parent=pnt.kml[["Document"]])
txtc <- paste0('<Placemark><name/><styleUrl>#pnt',obj$rownumber,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[2:nrow(obj),1],',',coordinates(obj)[2:nrow(obj),2],',',round(obj@data[2:nrow(obj),altitude]),'</coordinates></Point></Placemark>')
style <- paste0('<Style id="', 'pnt',obj$rownumber[2:nrow(obj)],'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[2:nrow(obj),colour]),'</color><heading>',obj@data[2:nrow(obj),heading]-180,'</heading>
<scale>',rescale(obj@data[2:nrow(obj),size],size_scale),'</scale>
<Icon><href>',shape,'</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
txtc_start <- paste0('<Placemark><name/><styleUrl>#pnt',1,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[1,1],',',coordinates(obj)[1,2],',',round(obj@data[1,altitude]),'</coordinates></Point></Placemark>')
style_start <- paste0('<Style id="', 'pnt',1,'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[1,colour]),'</color>
<scale>',rescale(obj@data[1,size],size_scale),'</scale>
<Icon><href>','http://maps.google.com/mapfiles/kml/pal2/icon18.png','</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
parseXMLAndAdd(style_start, parent = h4)
parseXMLAndAdd(txtc_start, parent = h4)
parseXMLAndAdd(style, parent = h4)
parseXMLAndAdd(txtc, parent = h4)
XML::saveXML(pnt.kml, filename)
# obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
# coordinates(obj) <- c('longitude','latitude')
# proj4string(obj)<- CRS("+init=epsg:4326")
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/test.kml')
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="icons/fCO2arrow.png",filename='Downloads/test.kml')
}
obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
coordinates(obj) <- c('longitude','latitude')
proj4string(obj)<- CRS("+init=epsg:4326")
kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/kmlresulttest.kml')
kml2 <- function(obj,altitude,colour,heading,size,size_scale=c(0.5,2),shape,filename='text.kml'){
require(sp)
require(plotKML)
require(scales)
# obj = spatialpointsdataframe
# altitude = column name with altitude info
# ...
# shape = icon weblink
obj$rownumber <- 1:nrow(obj)
require("XML")
pnt.kml <- newXMLNode('kml')
h2 <- newXMLNode("Document", parent = pnt.kml)
h3 <- newXMLNode("name", "flight", parent= h2)
h4 <- newXMLNode("Folder", parent=pnt.kml[["Document"]])
txtc <- paste0('<Placemark><name/><styleUrl>#pnt',obj$rownumber,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[2:nrow(obj),1],',',coordinates(obj)[2:nrow(obj),2],',',round(obj@data[2:nrow(obj),altitude]),'</coordinates></Point></Placemark>')
style <- paste0('<Style id="', 'pnt',obj$rownumber[2:nrow(obj)],'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[2:nrow(obj),colour]),'</color><heading>',obj@data[2:nrow(obj),heading]-180,'</heading>
<scale>',rescale(obj@data[2:nrow(obj),size],size_scale),'</scale>
<Icon><href>',shape,'</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
txtc_start <- paste0('<Placemark><name/><styleUrl>#pnt',1,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[1,1],',',coordinates(obj)[1,2],',',round(obj@data[1,altitude]),'</coordinates></Point></Placemark>')
style_start <- paste0('<Style id="', 'pnt',1,'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[1,colour]),'</color>
<scale>',rescale(obj@data[1,size],size_scale),'</scale>
<Icon><href>','http://maps.google.com/mapfiles/kml/pal2/icon18.png','</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
parseXMLAndAdd(style_start, parent = h4)
parseXMLAndAdd(txtc_start, parent = h4)
parseXMLAndAdd(style, parent = h4)
parseXMLAndAdd(txtc, parent = h4)
XML::saveXML(pnt.kml, filename)
# obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
# coordinates(obj) <- c('longitude','latitude')
# proj4string(obj)<- CRS("+init=epsg:4326")
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/test.kml')
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="icons/fCO2arrow.png",filename='Downloads/test.kml')
}
obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
coordinates(obj) <- c('longitude','latitude')
proj4string(obj)<- CRS("+init=epsg:4326")
kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/kmlresulttest.kml')
kml2 <- function(obj,altitude,colour,heading,size,size_scale=c(0.5,2),shape,filename='text.kml'){
require(sp)
require(plotKML)
require(scales)
# obj = spatialpointsdataframe
# altitude = column name with altitude info
# ...
# shape = icon weblink
obj$rownumber <- 1:nrow(obj)
require("XML")
pnt.kml <- newXMLNode('kml')
h2 <- newXMLNode("Document", parent = pnt.kml)
h3 <- newXMLNode("name", "flight", parent= h2)
h4 <- newXMLNode("Folder", parent=pnt.kml[["Document"]])
txtc <- paste0('<Placemark><name/><styleUrl>#pnt',obj$rownumber[2:nrow(obj)],
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[2:nrow(obj),1],',',coordinates(obj)[2:nrow(obj),2],',',round(obj@data[2:nrow(obj),altitude]),'</coordinates></Point></Placemark>')
style <- paste0('<Style id="', 'pnt',obj$rownumber[2:nrow(obj)],'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[2:nrow(obj),colour]),'</color><heading>',obj@data[2:nrow(obj),heading]-180,'</heading>
<scale>',rescale(obj@data[2:nrow(obj),size],size_scale),'</scale>
<Icon><href>',shape,'</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
txtc_start <- paste0('<Placemark><name/><styleUrl>#pnt',1,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[1,1],',',coordinates(obj)[1,2],',',round(obj@data[1,altitude]),'</coordinates></Point></Placemark>')
style_start <- paste0('<Style id="', 'pnt',1,'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[1,colour]),'</color>
<scale>',rescale(obj@data[1,size],size_scale),'</scale>
<Icon><href>','http://maps.google.com/mapfiles/kml/pal2/icon18.png','</href></Icon></IconStyle><BalloonStyle><text>$start track</text></BalloonStyle></Style>')
parseXMLAndAdd(style_start, parent = h4)
parseXMLAndAdd(txtc_start, parent = h4)
parseXMLAndAdd(style, parent = h4)
parseXMLAndAdd(txtc, parent = h4)
XML::saveXML(pnt.kml, filename)
# obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
# coordinates(obj) <- c('longitude','latitude')
# proj4string(obj)<- CRS("+init=epsg:4326")
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/test.kml')
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="icons/fCO2arrow.png",filename='Downloads/test.kml')
}
obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
coordinates(obj) <- c('longitude','latitude')
proj4string(obj)<- CRS("+init=epsg:4326")
kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/kmlresulttest.kml')
kml2 <- function(obj,altitude,colour,heading,size,size_scale=c(0.5,2),shape,filename='text.kml'){
require(sp)
require(plotKML)
require(scales)
# obj = spatialpointsdataframe
# altitude = column name with altitude info
# ...
# shape = icon weblink
obj$rownumber <- 1:nrow(obj)
require("XML")
pnt.kml <- newXMLNode('kml')
h2 <- newXMLNode("Document", parent = pnt.kml)
h3 <- newXMLNode("name", "flight", parent= h2)
h4 <- newXMLNode("Folder", parent=pnt.kml[["Document"]])
txtc <- paste0('<Placemark><name/><styleUrl>#pnt',obj$rownumber[2:nrow(obj)],
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[2:nrow(obj),1],',',coordinates(obj)[2:nrow(obj),2],',',round(obj@data[2:nrow(obj),altitude]),'</coordinates></Point></Placemark>')
style <- paste0('<Style id="', 'pnt',obj$rownumber[2:nrow(obj)],'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[2:nrow(obj),colour]),'</color><heading>',obj@data[2:nrow(obj),heading]-180,'</heading>
<scale>',rescale(obj@data[2:nrow(obj),size],size_scale),'</scale>
<Icon><href>',shape,'</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
txtc_start <- paste0('<Placemark><name/><styleUrl>#pnt',1,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[1,1],',',coordinates(obj)[1,2],',',round(obj@data[1,altitude]),'</coordinates></Point></Placemark>')
style_start <- paste0('<Style id="', 'pnt',1,'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[1,colour]),'</color>
<scale>',rescale(obj@data[1,size],size_scale),'</scale>
<Icon><href>','http://maps.google.com/mapfiles/kml/pal2/icon18.png','</href></Icon></IconStyle><BalloonStyle><text>StarTrack</text></BalloonStyle></Style>')
parseXMLAndAdd(style_start, parent = h4)
parseXMLAndAdd(txtc_start, parent = h4)
parseXMLAndAdd(style, parent = h4)
parseXMLAndAdd(txtc, parent = h4)
XML::saveXML(pnt.kml, filename)
# obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
# coordinates(obj) <- c('longitude','latitude')
# proj4string(obj)<- CRS("+init=epsg:4326")
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/test.kml')
# kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="icons/fCO2arrow.png",filename='Downloads/test.kml')
}
obj <- data.frame(altitude=1:100,colour=heat.colors(100),heading=1:100,variable=runif(100),longitude=seq(15.202020, 16.202020,length.out=100), latitude=seq(45.459069,46.543523,length.out=100))
coordinates(obj) <- c('longitude','latitude')
proj4string(obj)<- CRS("+init=epsg:4326")
kml2(obj,altitude='altitude',colour='colour',heading='heading',size='variable',shape="http://maps.google.com/mapfiles/kml/shapes/airports.png",filename='Downloads/kmlresulttest.kml')
library(plyr)
library(dplyr)
library(plotKML)
library(sp)
library(devtools)
install_github('jedgroev/makekml')
devtools::load_all()
library(makekml)
load("~/Downloads/tst.RData")
names(x)
# Rlat= Latitude (decimal degrees)
#Rlong= Longitude (decimal degrees)
#Ralt= altitude (m asl)
#CO2flx=CO2 flux
#vel= wind velocity (m/s)
#dir= wind direction (degrees)
#my_col <- colorRampPalette(c('yellow','red'))
library(plot3D)
#This adds a column of color values
# based on the y values
x$Col <- rev(heat.colors(50))[as.numeric(cut(x$CO2flx,breaks = 50))]#### add colour based on the humidity
Col <- as.data.frame(unique(x$Col),stringsAsFactors=FALSE)
#Col_Sd <- as.data.frame(unique(x$Col_Sd),stringsAsFactors=FALSE)
values <- as.data.frame(paste0('bla_', (1:length(Col[,1]))),stringsAsFactors=FALSE)
#values_Sd <- as.data.frame(paste0('bla_', (1:length(Col_Sd[,1]))),stringsAsFactors=FALSE)
colors_inf <- cbind(Col,values)
colnames(colors_inf) <- c('Col','values')
#colors_inf_Sd <- cbind(Col_Sd,values_Sd)
#colnames(colors_inf_Sd) <- c('Col_Sd','values_Sd')
x <- join(x, colors_inf, type= 'left',by='Col')
#x_sd<-join(x, colors_inf_Sd, type= 'left',by='Col_Sd')
fCO2=x
#x_sd_spatial=x_sd
coordinates(fCO2)<-c("Rlong","Rlat")
#coordinates(x_sd_spatial)<-c("Lon","Lat")
#Assign a projection
proj4string(fCO2)<- CRS("+init=epsg:4326")
#proj4string(x_sd_spatial)<- CRS("+init=epsg:4326")
head(fCO2@data)
# colors and corresponding CO2 flux
colors_legend<- fCO2@data[order(fCO2@data$CO2flx),c('CO2flx','Col')]
# generate a gradient
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.1,tcol='white')
installed.packages()
installed.packages()
githubinstall("makekml")
library(githubinstall)
githubinstall("makekml")
install_github('jedgroev/makekml')
install_github("jedgroev/makekml")
install_github("jedgroev/makekml", force=TRUE)
install_github("jedgroev/makekml", force=TRUE)
makekml()
makekml
?makekml
export
export()
makekml::export()
install_github("jedgroev/makekml", force=TRUE)
library(makekml)
makekml::
library(roxygen2)
setwd("Downloads/2_GITHUB/makekml/")
document()
install_github("jedgroev/makekml", force=TRUE)
makekml::icon()
library(plyr)
library(dplyr)
library(plotKML)
library(sp)
library(devtools)
library(githubinstall)
install_github("jedgroev/makekml")
library(makekml)
load("~/Downloads/tst.RData")
names(x)
# Rlat= Latitude (decimal degrees)
#Rlong= Longitude (decimal degrees)
#Ralt= altitude (m asl)
#CO2flx=CO2 flux
#vel= wind velocity (m/s)
#dir= wind direction (degrees)
#my_col <- colorRampPalette(c('yellow','red'))
library(plot3D)
#This adds a column of color values
# based on the y values
x$Col <- rev(heat.colors(50))[as.numeric(cut(x$CO2flx,breaks = 50))]#### add colour based on the humidity
Col <- as.data.frame(unique(x$Col),stringsAsFactors=FALSE)
#Col_Sd <- as.data.frame(unique(x$Col_Sd),stringsAsFactors=FALSE)
values <- as.data.frame(paste0('bla_', (1:length(Col[,1]))),stringsAsFactors=FALSE)
#values_Sd <- as.data.frame(paste0('bla_', (1:length(Col_Sd[,1]))),stringsAsFactors=FALSE)
colors_inf <- cbind(Col,values)
colnames(colors_inf) <- c('Col','values')
#colors_inf_Sd <- cbind(Col_Sd,values_Sd)
#colnames(colors_inf_Sd) <- c('Col_Sd','values_Sd')
x <- join(x, colors_inf, type= 'left',by='Col')
#x_sd<-join(x, colors_inf_Sd, type= 'left',by='Col_Sd')
fCO2=x
#x_sd_spatial=x_sd
coordinates(fCO2)<-c("Rlong","Rlat")
#coordinates(x_sd_spatial)<-c("Lon","Lat")
#Assign a projection
proj4string(fCO2)<- CRS("+init=epsg:4326")
#proj4string(x_sd_spatial)<- CRS("+init=epsg:4326")
head(fCO2@data)
# make a gradient png
# colors and corresponding CO2 flux
colors_legend<- fCO2@data[order(fCO2@data$CO2flx),c('CO2flx','Col')]
# generate a gradient
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.1,tcol='white')
# embed the gradient_icon function in the export function to generate the png of gradient_icon
export(func=gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),1),
bars=10,
title='CFlux',
tdist=0.1),
res2=30,
ratio=0.7,
file='gradient_icon',
type='png')
# generate an icon
export(func=icon(),
file='icon',
type='png')
# generate a kml
head(fCO2@data)
kml2(fCO2,altitude='Ralt',colour='Col',heading='dir',size='vel',icon="head.png",filename='CO2flx.kml',legend_icon='gradient_icon.png')
# convert to kmz
kml2kmz(c('head.png','CO2flx.kml','gradient_icon.png'),'CO2flx_kmz')
# generate a kml
head(fCO2@data)
kml2(fCO2,altitude='Ralt',colour='Col',heading='dir',size='vel',icon="icon.png",filename='CO2flx.kml',legend_icon='gradient_icon.png')
# convert to kmz
kml2kmz(c('icon.png','CO2flx.kml','gradient_icon.png'),'CO2flx_kmz')
