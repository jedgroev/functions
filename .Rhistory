file='gradient_icon',
type='png')
kml2(obj,altitude=altitude,colour=colour,heading=heading,size=size,icon="icon.png",filename='test.kml',legend_icon='gradient_icon')
kml2kmz(c('icon.png','test.kml','gradient_icon.png'),filename = filename)
}
kmz(obj=obj, altitude='altitude', colour='colour', variable='variable_colour',heading='heading',size='variable_size',filename='resulting_kmz')
# Example that also includes a legend
kmz <- function(obj,altitude, colour, variable, heading, size, icon, filename){
# generate a gradient
colvar <- unique(obj@data[order(obj@data[,variable]),c(colour,variable)])
# embed the gradient_icon function in the export function to generate the png of gradient_icon
export(func=gradient_icon(col=colvar$colour,
labels = round(c(min(colvar[,variable]),max(colvar[,variable])),2),
bars=5,
title='title',
tdist=0.1,tcol='white'),
res2=30,
ratio=0.6,
file='gradient_icon',
type='png')
kml2(obj,altitude=altitude,colour=colour,heading=heading,size=size,icon="icon.png",filename='test.kml',legend_icon='gradient_icon')
kml2kmz(c('icon.png','test.kml','gradient_icon.png'),filename = filename)
}
kmz(obj=obj, altitude='altitude', colour='colour', variable='variable_colour',heading='heading',size='variable_size',filename='resulting_kmz')
icon <- function(pch=24,col='black',bg='white', filename=NULL){
ff <- function(){
par(bg=NA)
plot(1,1,axes=FALSE,ann=FALSE, cex =40, col=col,bg=bg,pch=pch)
}
ff()
if(is.null(filename) == FALSE){export(func=ff(),filename,type='png')}
}
icon()
icon()
icon(filename='icon_output')
gradient_icon <- function(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.05,bars=10,title=NULL, dist=c(0.15,0.15), tcol='white',filename=NULL,ratio=0.7){
ff <- function(){
par(bg=NA, mar=c(0,0,1,0),oma=c(0,0,1,0), cex=2.8)
x <- 0:1
y <- 0:1
plot(x,y,type='n',axes=FALSE,ann=FALSE)
gradient(x,y, col, len=c(0.7,0.8), labels=labels, bars=bars, title=title, tdist=tdist,dist=dist,tcol=tcol)
}
if(is.null(filename) == FALSE){export(func=ff(),filename,ratio=ratio,type='png')}
}
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(500,1000), tdist=0.05,bars=10,title=NULL,ratio=0.8, filename='anothertest')
gradient_icon <- function(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.05,bars=10,title=NULL, dist=c(0.15,0.15), tcol='white',filename=NULL,ratio=0.7){
ff <- function(){
par(bg=NA, mar=c(0,0,1,0),oma=c(0,0,1,0), cex=2.8)
x <- 0:1
y <- 0:1
plot(x,y,type='n',axes=FALSE,ann=FALSE)
gradient(x,y, col, len=c(0.7,0.8), labels=labels, bars=bars, title=title, tdist=tdist,dist=dist,tcol=tcol)
}
ff()
if(is.null(filename) == FALSE){export(func=ff(),filename,ratio=ratio,type='png')}
}
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(500,1000), tdist=0.05,bars=10,title=NULL,ratio=0.8, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.05,bars=10,title=NULL,ratio=0.8, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.05,bars=10,title='blabla',ratio=0.8, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.1,bars=10,title='blabla',ratio=0.8, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.1,bars=10,title='blabla',ratio=0.6, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(1,100), tdist=0.1,bars=10,title='blabla',ratio=0.6, filename='anothertest')
gradient_icon <- function(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.05,bars=10,title=NULL, dist=c(0.20,0.20), tcol='white',filename=NULL,ratio=0.7){
ff <- function(){
par(bg=NA, mar=c(0,0,1,0),oma=c(0,0,1,0), cex=2.8)
x <- 0:1
y <- 0:1
plot(x,y,type='n',axes=FALSE,ann=FALSE)
gradient(x,y, col, len=c(0.7,0.8), labels=labels, bars=bars, title=title, tdist=tdist,dist=dist,tcol=tcol)
}
ff()
if(is.null(filename) == FALSE){export(func=ff(),filename,ratio=ratio,type='png')}
}
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(1,100), tdist=0.1,bars=10,title='blabla',ratio=0.6, filename='anothertest')
gradient_icon <- function(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.05,bars=10,title=NULL, dist=c(0.25,0.25), tcol='white',filename=NULL,ratio=0.7){
ff <- function(){
par(bg=NA, mar=c(0,0,1,0),oma=c(0,0,1,0), cex=2.8)
x <- 0:1
y <- 0:1
plot(x,y,type='n',axes=FALSE,ann=FALSE)
gradient(x,y, col, len=c(0.7,0.8), labels=labels, bars=bars, title=title, tdist=tdist,dist=dist,tcol=tcol)
}
ff()
if(is.null(filename) == FALSE){export(func=ff(),filename,ratio=ratio,type='png')}
}
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(1,100), tdist=0.1,bars=10,title='blabla',ratio=0.6, filename='anothertest')
gradient_icon <- function(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.05,bars=10,title=NULL, dist=c(0.20,0.20), tcol='white',filename=NULL,ratio=0.7){
ff <- function(){
par(bg=NA, mar=c(0,0,1,0),oma=c(0,0,1,0), cex=2.8)
x <- 0:1
y <- 0:1
plot(x,y,type='n',axes=FALSE,ann=FALSE)
gradient(x,y, col, len=c(0.7,0.8), labels=labels, bars=bars, title=title, tdist=tdist,dist=dist,tcol=tcol)
}
ff()
if(is.null(filename) == FALSE){export(func=ff(),filename,ratio=ratio,type='png')}
}
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(1,100), tdist=0.1,bars=10,title='blabla',ratio=0.6, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.1,bars=10,title='blabla',ratio=0.6, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.2,bars=10,title='blabla',ratio=0.6, filename='anothertest')
gradient_icon <- function(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.05,bars=10,title=NULL, dist=c(0.25,0.20), tcol='white',filename=NULL,ratio=0.7){
ff <- function(){
par(bg=NA, mar=c(0,0,1,0),oma=c(0,0,1,0), cex=2.8)
x <- 0:1
y <- 0:1
plot(x,y,type='n',axes=FALSE,ann=FALSE)
gradient(x,y, col, len=c(0.7,0.8), labels=labels, bars=bars, title=title, tdist=tdist,dist=dist,tcol=tcol)
}
ff()
if(is.null(filename) == FALSE){export(func=ff(),filename,ratio=ratio,type='png')}
}
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.2,bars=10,title='blabla',ratio=0.6, filename='anothertest')
gradient_icon <- function(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.05,bars=10,title=NULL, dist=c(0.40,0.20), tcol='white',filename=NULL,ratio=0.7){
ff <- function(){
par(bg=NA, mar=c(0,0,1,0),oma=c(0,0,1,0), cex=2.8)
x <- 0:1
y <- 0:1
plot(x,y,type='n',axes=FALSE,ann=FALSE)
gradient(x,y, col, len=c(0.7,0.8), labels=labels, bars=bars, title=title, tdist=tdist,dist=dist,tcol=tcol)
}
ff()
if(is.null(filename) == FALSE){export(func=ff(),filename,ratio=ratio,type='png')}
}
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.2,bars=10,title='blabla',ratio=0.6, filename='anothertest')
gradient_icon <- function(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.05,bars=10,title=NULL, dist=c(0.40,0.20), tcol='white',filename=NULL,ratio=0.7){
ff <- function(){
par(bg=NA, mar=c(0,0,1,0),oma=c(0,0,1,0), cex=2.8)
x <- 0:1
y <- 0:1
plot(x,y,type='n',axes=FALSE,ann=FALSE)
gradient(x,y, col, len=c(0.7,0.8), labels=labels, bars=bars, title=title, tdist=tdist,dist=dist,tcol=tcol)
}
ff()
if(is.null(filename) == FALSE){export(func=ff(),filename,ratio=ratio,type='png')}
}
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.2,bars=10,title='blabla',ratio=0.6, filename='anothertest')
gradient_icon <- function(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.05,bars=10,title=NULL, dist=c(0.40,0.20), tcol='white',filename=NULL,ratio=0.7){
ff <- function(){
par(bg=NA, mar=c(0,0,1,0),oma=c(0,0,1,0), cex=2.8)
x <- 0:1
y <- 0:1
plot(x,y,type='n',axes=FALSE,ann=FALSE)
gradient(x,y, col, len=c(0.7,0.8), labels=labels, bars=bars, title=title, tdist=tdist,dist=dist,tcol=tcol)
}
ff()
if(is.null(filename) == FALSE){export(func=ff(),filename,ratio=ratio,type='png')}
}
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.2,bars=10,title='blabla',ratio=0.6, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.2,bars=10,title='blabla',ratio=0.5, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.2,bars=10,title='blabla',ratio=0.3, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.2,bars=10,title='blabla',ratio=0.5, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(500,1000), tdist=0.05,bars=10,title=NULL,filename='gradient_icon',res2=30,ratio=0.8)
gradient_icon <- function(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.05,bars=10,title=NULL,dist=c(0.40,0.20),tcol='white',filename=NULL,ratio=0.5,res2=30){
ff <- function(){
par(bg=NA, mar=c(0,0,1,0),oma=c(0,0,1,0), cex=2.8)
x <- 0:1
y <- 0:1
plot(x,y,type='n',axes=FALSE,ann=FALSE)
gradient(x,y, col, len=c(0.7,0.8), labels=labels, bars=bars, title=title, tdist=tdist,dist=dist,tcol=tcol)
}
ff()
if(is.null(filename) == FALSE){export(func=ff(),filename,ratio=ratio,res2=res2,type='png')}
}
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(500,1000), tdist=0.05,bars=10,title=NULL,filename='gradient_icon',res2=30,ratio=0.8)
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(500,1000), tdist=0.05,bars=10,title=NULL,filename='gradient_icon',res2=30,ratio=0.5)
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.05,bars=10,title='blabla',ratio=0.5, filename='anothertest')
gradient_icon <- function(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.05,bars=10,title=NULL, dist=c(0.40,0.20), tcol='white',filename=NULL,ratio=0.5){
ff <- function(){
par(bg=NA, mar=c(0,0,1,0),oma=c(0,0,1,0), cex=2.8)
x <- 0:1
y <- 0:1
plot(x,y,type='n',axes=FALSE,ann=FALSE)
gradient(x,y, col, len=c(0.7,0.8), labels=labels, bars=bars, title=title, tdist=tdist,dist=dist,tcol=tcol)
}
ff()
if(is.null(filename) == FALSE){export(func=ff(),filename,ratio=ratio,type='png')}
}
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.05,bars=10,title='blabla',ratio=0.5, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.1,bars=10,title='blabla',ratio=0.5, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.2,bars=10,title='blabla',ratio=0.5, filename='anothertest')
gradient_icon(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,5000), tdist=0.2,bars=10,title='blabla',ratio=0.5, filename='anothertest')
install_github("jedgroev/makekml")
library(makekml)
setwd('~/Downloads')
load("~/Downloads/tst.RData")
names(x)
# Rlat= Latitude (decimal degrees)
#Rlong= Longitude (decimal degrees)
#Ralt= altitude (m asl)
#CO2flx=CO2 flux
#vel= wind velocity (m/s)
#dir= wind direction (degrees)
#my_col <- colorRampPalette(c('yellow','red'))
library(plot3D)
#This adds a column of color values
# based on the y values
x$Col <- rev(heat.colors(50))[as.numeric(cut(x$CO2flx,breaks = 50))]#### add colour based on the humidity
Col <- as.data.frame(unique(x$Col),stringsAsFactors=FALSE)
#Col_Sd <- as.data.frame(unique(x$Col_Sd),stringsAsFactors=FALSE)
values <- as.data.frame(paste0('bla_', (1:length(Col[,1]))),stringsAsFactors=FALSE)
#values_Sd <- as.data.frame(paste0('bla_', (1:length(Col_Sd[,1]))),stringsAsFactors=FALSE)
colors_inf <- cbind(Col,values)
colnames(colors_inf) <- c('Col','values')
#colors_inf_Sd <- cbind(Col_Sd,values_Sd)
#colnames(colors_inf_Sd) <- c('Col_Sd','values_Sd')
x <- join(x, colors_inf, type= 'left',by='Col')
#x_sd<-join(x, colors_inf_Sd, type= 'left',by='Col_Sd')
fCO2=x
#x_sd_spatial=x_sd
coordinates(fCO2)<-c("Rlong","Rlat")
#coordinates(x_sd_spatial)<-c("Lon","Lat")
#Assign a projection
proj4string(fCO2)<- CRS("+init=epsg:4326")
#proj4string(x_sd_spatial)<- CRS("+init=epsg:4326")
head(fCO2@data)
# colors and corresponding CO2 flux
colors_legend<- fCO2@data[order(fCO2@data$CO2flx),c('CO2flx','Col')]
colors_legend
?gradient_icon
setwd('~/Downloads/2_GITHUB/makekml/')
document()
install_github("jedgroev/makekml")
library(makekml)
gradient_icon()
gradient_icon
?gradient_icon
icon()
?icon()
# generate an icon
icon(pch=24,col='black',bg='white',filename='icon')
# generate a kml
head(fCO2@data)
kml2(fCO2,altitude='Ralt',colour='Col',heading='dir',size='vel',icon="icon.png",filename='CO2flx.kml',legend_icon='gradient_icon.png')
# convert to kmz
kml2kmz(c('icon.png','CO2flx.kml','gradient_icon.png'),'CO2flx_kmz')
getwd()
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.1,tcol='white',
filename='gradient_icon',
ratio=0.5,
res2=30)
?gradient_icon
getwd()
document()
install_github("jedgroev/makekml")
library(makekml)
# generate and save gradient scale
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.1,tcol='white',
filename='gradient_icon',
ratio=0.5,
res2=30)
# generate and save gradient scale
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.1,tcol='white',
filename='gradient_icon',
ratio=0.5,
res=30)
?gradient_icon
document()
install_github("jedgroev/makekml")
library(makekml)
# generate and save gradient scale
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.1,tcol='white',
filename='gradient_icon',
ratio=0.5,
res=30)
library(makekml)
gradient_icon
?gradient_icon
# generate and save gradient scale
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.1,tcol='white',
filename='gradient_icon',
ratio=0.5,
res=30)
document()
install_github("jedgroev/makekml")
library(makekml)
# generate and save gradient scale
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.1,tcol='white',
filename='gradient_icon',
ratio=0.5,
res=30)
?gradient_icon
?gradient_icon
# generate and save icon
icon(pch=24,col='black',bg='white',filename='icon')
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.1,tcol='white',
filename='gradient_icon',
ratio=0.5,
res2=30)
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.1,tcol='white',
filename='gradient_icon',
ratio=0.5,
res2=30)
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.1,tcol='white',
filename='gradient_icon',
ratio=0.5)
# generate and save gradient scale
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.2,tcol='white',
filename='gradient_icon',
ratio=0.5)
# generate a kml
head(fCO2@data)
kml2(fCO2,altitude='Ralt',colour='Col',heading='dir',size='vel',icon="icon.png",filename='CO2flx.kml',legend_icon='gradient_icon.png')
# convert to kmz
kml2kmz(c('icon.png','CO2flx.kml','gradient_icon.png'),'CO2flx_kmz')
?gradient_icon
# generate and save gradient scale
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.2,
dist=c(0.15,0.15),
tcol='white',
filename='gradient_icon',
ratio=0.5)
# generate and save icon
icon(pch=24,col='black',bg='white',filename='icon')
# generate a kml
head(fCO2@data)
kml2(fCO2,altitude='Ralt',colour='Col',heading='dir',size='vel',icon="icon.png",filename='CO2flx.kml',legend_icon='gradient_icon.png')
# convert to kmz
kml2kmz(c('icon.png','CO2flx.kml','gradient_icon.png'),'CO2flx_kmz')
# generate and save gradient scale
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.01,
dist=c(0.15,0.15),
tcol='white',
filename='gradient_icon',
ratio=0.5)
# generate and save icon
icon(pch=24,col='black',bg='white',filename='icon')
# generate a kml
head(fCO2@data)
kml2(fCO2,altitude='Ralt',colour='Col',heading='dir',size='vel',icon="icon.png",filename='CO2flx.kml',legend_icon='gradient_icon.png')
# convert to kmz
kml2kmz(c('icon.png','CO2flx.kml','gradient_icon.png'),'CO2flx_kmz')
# generate and save gradient scale
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.2,
tcol='white',
filename='gradient_icon',
ratio=0.5)
# generate and save icon
icon(pch=24,col='black',bg='white',filename='icon')
# generate a kml
head(fCO2@data)
kml2(fCO2,altitude='Ralt',colour='Col',heading='dir',size='vel',icon="icon.png",filename='CO2flx.kml',legend_icon='gradient_icon.png')
# convert to kmz
kml2kmz(c('icon.png','CO2flx.kml','gradient_icon.png'),'CO2flx_kmz')
# generate a kml
head(fCO2@data)
kml2 <- function(obj,altitude,colour,heading,size,size_scale=c(0.5,2),icon,filename='text.kml', legend_icon=NULL){
require(sp)
require(plotKML)
require(scales)
obj$rownumber <- 1:nrow(obj)
require("XML")
pnt.kml <- newXMLNode('kml')
h2 <- newXMLNode("Document", parent = pnt.kml)
h3 <- newXMLNode("name", "flight", parent= h2)
h4 <- newXMLNode("Folder", parent=pnt.kml[["Document"]])
txtc <- paste0('<Placemark><name/><styleUrl>#pnt',obj$rownumber[2:nrow(obj)],
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[2:nrow(obj),1],',',coordinates(obj)[2:nrow(obj),2],',',round(obj@data[2:nrow(obj),altitude]),'</coordinates></Point></Placemark>')
style <- paste0('<Style id="', 'pnt',obj$rownumber[2:nrow(obj)],'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[2:nrow(obj),colour]),'</color><heading>',obj@data[2:nrow(obj),heading],'</heading>
<scale>',rescale(obj@data[2:nrow(obj),size],size_scale),'</scale>
<Icon><href>',icon,'</href></Icon></IconStyle><BalloonStyle><text>$[description]</text></BalloonStyle></Style>')
txtc_start <- paste0('<Placemark><name/><styleUrl>#pnt',1,
'</styleUrl><Point><extrude>1</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates>'
,coordinates(obj)[1,1],',',coordinates(obj)[1,2],',',round(obj@data[1,altitude]),'</coordinates></Point></Placemark>')
style_start <- paste0('<Style id="', 'pnt',1,'"><LabelStyle><scale>',0.5,'</scale></LabelStyle><IconStyle><color>',col2kml(obj@data[1,colour]),'</color>
<scale>',rescale(obj@data[1,size],size_scale),'</scale>
<Icon><href>','http://maps.google.com/mapfiles/kml/pal2/icon18.png','</href></Icon></IconStyle><BalloonStyle><text>StarTrack</text></BalloonStyle></Style>')
if(is.null(legend_icon) == FALSE){
legend <- paste0('<ScreenOverlay><name>Legend: Gradient</name><Icon><href>',legend_icon,'</href></Icon>
<overlayXY x="0" y="0.5" xunits="fraction" yunits="fraction"/>
<screenXY x="0" y="1" xunits="fraction" yunits="fraction"/>
<rotationXY x="0" y="0" xunits="fraction" yunits="fraction"/>
<size x="0" y="0" xunits="fraction" yunits="fraction"/></ScreenOverlay>')
}
parseXMLAndAdd(style_start, parent = h4)
parseXMLAndAdd(txtc_start, parent = h4)
parseXMLAndAdd(style, parent = h4)
parseXMLAndAdd(txtc, parent = h4)
if(is.null(legend_icon) == FALSE){
parseXMLAndAdd(legend, parent = h4)
}
XML::saveXML(pnt.kml, filename)
}
kml2(fCO2,altitude='Ralt',colour='Col',heading='dir',size='vel',icon="icon.png",filename='CO2flx.kml',legend_icon='gradient_icon.png')
# convert to kmz
kml2kmz(c('icon.png','CO2flx.kml','gradient_icon.png'),'CO2flx_kmz')
document()
install_github("jedgroev/makekml")
library(makekml)
# generate and save gradient scale
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.2,
tcol='white',
filename='gradient_icon',
ratio=0.5)
# generate and save icon
icon(pch=24,col='black',bg='white',filename='icon')
# generate a kml
head(fCO2@data)
kml2(fCO2,altitude='Ralt',colour='Col',heading='dir',size='vel',icon="icon.png",filename='CO2flx.kml',legend_icon='gradient_icon.png')
# convert to kmz
kml2kmz(c('icon.png','CO2flx.kml','gradient_icon.png'),'CO2flx_kmz')
export
gradient_icon <- function(col=colorRampPalette(c('grey90','grey20'))(100), labels = c(0,1), tdist=0.2,bars=10,title=NULL,dist=c(0.40,0.20),tcol='white',filename=NULL,ratio=0.5){
ff <- function(){
par(bg=NA, mar=c(0,0,1,0),oma=c(0,0,1,0), cex=2.8)
x <- 0:1
y <- 0:1
plot(x,y,type='n',axes=FALSE,ann=FALSE)
gradient(x,y, col, len=c(0.7,0.8), labels=labels, bars=bars, title=title, tdist=tdist,dist=dist,tcol=tcol)
}
ff()
if(is.null(filename) == FALSE){export(func=ff(),filename,ratio=ratio,res2=30,type='png')}
}
gradient_icon
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.2,
tcol='white',
filename='gradient_icon',
ratio=0.5)
kml2(fCO2,altitude='Ralt',colour='Col',heading='dir',size='vel',icon="icon.png",filename='CO2flx.kml',legend_icon='gradient_icon.png')
# convert to kmz
kml2kmz(c('icon.png','CO2flx.kml','gradient_icon.png'),'CO2flx_kmz')
install_github("jedgroev/makekml")
library(makekml)
# generate and save gradient scale
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.2,
tcol='white',
filename='gradient_icon',
ratio=0.5)
# generate and save gradient scale
gradient_icon(col=colors_legend$Col,
labels = round(c(min(colors_legend$CO2flx),max(colors_legend$CO2flx)),2),
bars=5,
title='CFlux',
tdist=0.2,
tcol='white',
filename='gradient_icon',
ratio=0.5)
# generate and save icon
icon(pch=24,col='black',bg='white',filename='icon')
# generate a kml
head(fCO2@data)
kml2(fCO2,altitude='Ralt',colour='Col',heading='dir',size='vel',icon="icon.png",filename='CO2flx.kml',legend_icon='gradient_icon.png')
# convert to kmz
kml2kmz(c('icon.png','CO2flx.kml','gradient_icon.png'),'CO2flx_kmz')
document()
install_github("jedgroev/makekml")
kml2(fCO2,altitude='Ralt',colour='Col',heading='dir',size='vel',icon="icon.png",filename='CO2flx.kml',legend_icon='gradient_icon.png')
